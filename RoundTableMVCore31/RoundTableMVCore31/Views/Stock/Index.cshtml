@using DevExtreme.AspNet.Mvc

@using RoundTableERPDal
@using Microsoft.AspNetCore.Mvc.Localization
@using RoundTableDal.Models
@using GridEditMode = DevExtreme.AspNet.Mvc.GridEditMode

@inject IViewLocalizer Localizer
 
@{
  
    
    Layout = "~/Themes/AdminLte/_Blank.cshtml";
}
<div id="data-grid-demo">
    @(Html.DevExtreme().DataGrid<RoundTableDal.Models.Stock>()
        .ID("gridContainer")
        .ShowBorders(true)
        .Height(800)
    
        .FilterRow(filterRow => filterRow
            .Visible(true)
            .ApplyFilter(GridApplyFilterMode.Auto)
        )

        .SearchPanel(searchPanel => searchPanel
            .Visible(true)
            .Width(240)
            .Placeholder("Search...")
        )

        .HeaderFilter(headerFilter => headerFilter.Visible(true))


        .Editing(e => e.Mode(GridEditMode.Popup)
            .AllowUpdating(true)
            .Popup(p => p
                .Title("Employee Info")
                .ShowTitle(true)
                .Width(700)
                .Height(300)
                .Position(pos => pos
                    .My(HorizontalAlignment.Center, VerticalAlignment.Center)
                    .At(HorizontalAlignment.Center, VerticalAlignment.Center)
                    .Of(new JS("window"))
                )
            )
            .Form(f => f.Items(items => {
                items.AddGroup()
                    .ColCount(2)
                    .ColSpan(2)
                    .Items(groupItems => {
                        groupItems.AddSimpleFor(m => m.Name);
                        groupItems.AddSimpleFor(m => m.Description);
                        groupItems.AddSimpleFor(m => m.Barcode);
                        groupItems.AddSimpleFor(m => m.StartDate);
                        groupItems.AddSimpleFor(m => m.EndDate);
                        groupItems.AddSimpleFor(m => m.IsFreeText)
                             .ColSpan(2)
                             .Editor(editor => editor.TextArea().Height(100));
                    });
            }))
        )
        .Columns(columns =>
        {
            columns.AddFor(m => m.StockCode)
            .Width(100);
            columns.AddFor(m => m.Name)
                .Width(350);
            columns.AddFor(m => m.Description)
            .Width(350);
            columns.AddFor(m => m.StartDate);

            columns.AddFor(m => m.EndDate);



        })
        
        .Paging(paging => paging.PageSize(10))
        .Pager(pager => {
            pager.ShowPageSizeSelector(true);
            pager.AllowedPageSizes(new[] { 100, 200, 1000 });
            pager.ShowInfo(true);
        })
        .DataSource(d => d.Mvc()
            .Controller("Stock")
            .LoadAction("Get")
            .UpdateAction("Put")
            .Key("ID")
        )

    )
</div>

<script type="text/kendo-template" id="message">
    <div class="k-widget k-tooltip k-tooltip-validation k-invalid-msg field-validation-error" style="margin: 0.5em; display: block; " data-for="#=field#" data-valmsg-for="#=field#" id="#=field#_validationMessage">
        <span class="k-icon k-warning"> </span>#=message#<div class="k-callout k-callout-n"></div>
    </div>
</script>

<script type="text/javascript">
    var validationMessageTmpl = kendo.template($("#message").html());

    function error(args) {
        if (args.errors) {
            var grid = $("#Grid").data("kendoGrid");
            grid.one("dataBinding", function (e) {
                e.preventDefault();   // cancel grid rebind if error occurs

                for (var error in args.errors) {
                    showMessage(grid.editable.element, error, args.errors[error].errors);
                }
            });
        }
    }

    function showMessage(container, name, errors) {
        //add the validation message to the form
        container.find("[data-valmsg-for=" + name + "],[data-val-msg-for=" + name + "]")
            .replaceWith(validationMessageTmpl({ field: name, message: errors[0] }))
    }
</script>
