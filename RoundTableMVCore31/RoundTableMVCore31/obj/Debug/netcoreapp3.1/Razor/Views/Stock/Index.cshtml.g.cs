#pragma checksum "D:\MasterCode\WebSite\RoundTableMVCore31\RoundTableMVCore31\Views\Stock\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "56715cf8c7afd69d81f009682e1732eef209ab13"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Stock_Index), @"mvc.1.0.view", @"/Views/Stock/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 2 "D:\MasterCode\WebSite\RoundTableMVCore31\RoundTableMVCore31\Views\_ViewImports.cshtml"
using RoundTableMVCore31;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\MasterCode\WebSite\RoundTableMVCore31\RoundTableMVCore31\Views\_ViewImports.cshtml"
using RoundTableMVCore31.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "D:\MasterCode\WebSite\RoundTableMVCore31\RoundTableMVCore31\Views\Stock\Index.cshtml"
using DevExtreme.AspNet.Mvc;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\MasterCode\WebSite\RoundTableMVCore31\RoundTableMVCore31\Views\Stock\Index.cshtml"
using RoundTableERPDal;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\MasterCode\WebSite\RoundTableMVCore31\RoundTableMVCore31\Views\Stock\Index.cshtml"
using Microsoft.AspNetCore.Mvc.Localization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\MasterCode\WebSite\RoundTableMVCore31\RoundTableMVCore31\Views\Stock\Index.cshtml"
using RoundTableDal.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\MasterCode\WebSite\RoundTableMVCore31\RoundTableMVCore31\Views\Stock\Index.cshtml"
using GridEditMode = DevExtreme.AspNet.Mvc.GridEditMode;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"56715cf8c7afd69d81f009682e1732eef209ab13", @"/Views/Stock/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6e4f761b1b12752523eca57173812bb004feccae", @"/Views/_ViewImports.cshtml")]
    public class Views_Stock_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
            WriteLiteral("\r\n");
            WriteLiteral(" \r\n");
#nullable restore
#line 10 "D:\MasterCode\WebSite\RoundTableMVCore31\RoundTableMVCore31\Views\Stock\Index.cshtml"
  
  
    
    Layout = "~/Themes/AdminLte/_Blank.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("<div id=\"data-grid-demo\">\r\n    ");
#nullable restore
#line 16 "D:\MasterCode\WebSite\RoundTableMVCore31\RoundTableMVCore31\Views\Stock\Index.cshtml"
Write(Html.DevExtreme().DataGrid<RoundTableDal.Models.Stock>()
        .ID("gridContainer")
        .ShowBorders(true)
        .Height(800)
    
        .FilterRow(filterRow => filterRow
            .Visible(true)
            .ApplyFilter(GridApplyFilterMode.Auto)
        )

        .SearchPanel(searchPanel => searchPanel
            .Visible(true)
            .Width(240)
            .Placeholder("Search...")
        )

        .HeaderFilter(headerFilter => headerFilter.Visible(true))


        .Editing(e => e.Mode(GridEditMode.Popup)
            .AllowUpdating(true)
            .Popup(p => p
                .Title("Stock")
                .ShowTitle(true)
                .Width(700)
                .Height(300)
                .Position(pos => pos
                    .My(HorizontalAlignment.Center, VerticalAlignment.Center)
                    .At(HorizontalAlignment.Center, VerticalAlignment.Center)
                    .Of(new JS("window"))
                )
            )
            .Form(f => f.Items(items => {
                items.AddGroup()
                    .ColCount(2)
                    .ColSpan(2)
                    .Items(groupItems => {
                        groupItems.AddSimpleFor(m => m.Name);
                        groupItems.AddSimpleFor(m => m.Description);
                        groupItems.AddSimpleFor(m => m.Barcode);
                        groupItems.AddSimpleFor(m => m.StartDate);
                        groupItems.AddSimpleFor(m => m.EndDate);
                        groupItems.AddSimpleFor(m => m.IsFreeText)
                             .ColSpan(2)
                             .Editor(editor => editor.TextArea().Height(100));
                    });
            }))
        )
        .Columns(columns =>
        {
            columns.AddFor(m => m.StockCode)
            .Width(100);
            columns.AddFor(m => m.Name)
                .Width(350);
            columns.AddFor(m => m.Description)
            .Width(350);
            columns.AddFor(m => m.StartDate);

            columns.AddFor(m => m.EndDate);



        })
        
        .Paging(paging => paging.PageSize(10))
        .Pager(pager => {
            pager.ShowPageSizeSelector(true);
            pager.AllowedPageSizes(new[] { 100, 200, 1000 });
            pager.ShowInfo(true);
        })
        .DataSource(d => d.Mvc()
            .Controller("Stock")
            .LoadAction("Get")
            .UpdateAction("Stock_Update")
            .Key("ID")
        )

    );

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
</div>

<script type=""text/kendo-template"" id=""message"">
    <div class=""k-widget k-tooltip k-tooltip-validation k-invalid-msg field-validation-error"" style=""margin: 0.5em; display: block; "" data-for=""#=field#"" data-valmsg-for=""#=field#"" id=""#=field#_validationMessage"">
        <span class=""k-icon k-warning""> </span>#=message#<div class=""k-callout k-callout-n""></div>
    </div>
</script>

<script type=""text/javascript"">
    var validationMessageTmpl = kendo.template($(""#message"").html());

    function error(args) {
        if (args.errors) {
            var grid = $(""#Grid"").data(""kendoGrid"");
            grid.one(""dataBinding"", function (e) {
                e.preventDefault();   // cancel grid rebind if error occurs

                for (var error in args.errors) {
                    showMessage(grid.editable.element, error, args.errors[error].errors);
                }
            });
        }
    }

    function showMessage(container, name, errors) {
        //add the validat");
            WriteLiteral("ion message to the form\r\n        container.find(\"[data-valmsg-for=\" + name + \"],[data-val-msg-for=\" + name + \"]\")\r\n            .replaceWith(validationMessageTmpl({ field: name, message: errors[0] }))\r\n    }\r\n</script>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IViewLocalizer Localizer { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
